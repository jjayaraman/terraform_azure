# Workflow to destroy storage account
name: 'storage-destroy'

on:
  workflow_dispatch:
    inputs:
      environment:
        description: 'Select an Environment'
        required: true
        default: 'dev'
        type: choice
        options:
          - dev
          - sit
          - uat

permissions:
  id-token: write
  contents: read

env:
  TF_VAR_subscription_id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
  DEPLOY_ENV: ${{ github.event.inputs.environment || 'dev' }} # Default to dev for push

jobs:
  terraform-destroy:
    name: 'Terraform Destroy'
    runs-on: ubuntu-latest
    environment: ${{ github.event.inputs.environment || 'dev' }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v1
        with:
          cli_config_credentials_token: ${{ secrets.TF_API_TOKEN }}

      - name: Terraform Init
        run: terraform init -upgrade
        working-directory: ./storage

      # Azure Login
      - name: Azure Login
        uses: azure/login@v2
        with:
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          allow-no-subscriptions: true
          enable-AzPSSession: false
          environment: azurecloud
          audience: api://AzureADTokenExchange

      # Set Azure subscription
      - name: Set Azure Subscription
        run: |
          echo "Set Azure Subscription"
          az account set --subscription ${{ secrets.AZURE_SUBSCRIPTION_ID }}

      - name: Terraform Plan
        run: |
          echo "Terraform plan for ${{ DEPLOY_ENV }}"
          terraform plan -var-file="${{ DEPLOY_ENV }}.tfvars" -input=false
        working-directory: ./storage

      - name: Terraform Destroy
        run: |
          echo "Terraform destroy for ${{ DEPLOY_ENV }}"
          terraform destroy -var-file="${{ DEPLOY_ENV }}.tfvars" -auto-approve -input=false
        working-directory: ./storage
