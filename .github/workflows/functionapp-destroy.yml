# Workflow to destroy functionapp
name: 'functionapp-destroy'

on:
  schedule:
    - cron: '0 0 * * 0' # Runs at 00:00 (midnight) every Sunday

  workflow_dispatch:
    inputs:
      environment:
        description: 'Select an Environment'
        required: true
        default: 'dev'
        type: choice
        options:
          - dev
          - sit
          - uat

permissions:
  id-token: write
  contents: read

env:
  TF_VAR_subscription_id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
  DEPLOY_ENV: ${{ github.event.inputs.environment || 'dev' }}
  BC_resource_group: terraform_rg # TF state backend storage resource group name
  BC_storage_account_name: sttfstate2025dev # TF state backend storage account name

jobs:
  terraform-destroy:
    name: 'Terraform Destroy'
    runs-on: ubuntu-latest
    environment: ${{ github.event.inputs.environment || 'dev' }}
    defaults:
      run:
        shell: bash
        working-directory: ./functionapp # Set the working directory for all steps

    steps:
      - name: Debug Trigger Source
        run: |
          echo "Workflow triggered by: ${{ github.event_name }}"

      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v1

      # Azure Login
      - name: Azure Login
        uses: azure/login@v2
        with:
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          allow-no-subscriptions: true
          enable-AzPSSession: false
          environment: azurecloud
          audience: api://AzureADTokenExchange

      # Set Azure subscription
      - name: Set Azure Subscription
        run: |
          echo "Set Azure Subscription"
          az account set --subscription ${{ secrets.AZURE_SUBSCRIPTION_ID }}

      - name: Terraform Init
        run: |
          terraform init \
            -backend-config="subscription_id=${{ secrets.AZURE_SUBSCRIPTION_ID }}" \
            -backend-config="resource_group_name=${{ env.BC_resource_group }}" \
            -backend-config="storage_account_name=${{ env.BC_storage_account_name }}" \
            -backend-config="container_name=tfstate" \
            -backend-config="key=functionapp-${{ env.DEPLOY_ENV }}-terraform.tfstate"

      - name: Terraform Plan
        run: |
          echo "Terraform plan for ${{ env.DEPLOY_ENV }}"
          terraform plan -var-file=${{ env.DEPLOY_ENV }}.tfvars -input=false

      - name: Terraform Destroy
        run: |
          echo "Terraform destroy for ${{ env.DEPLOY_ENV }}"
          terraform destroy -var-file=${{ env.DEPLOY_ENV }}.tfvars -auto-approve -input=false
